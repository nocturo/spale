name: Build and Release spale (static)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential clang llvm make pkg-config git ca-certificates \
            linux-tools-generic libbpf-dev libelf-dev zlib1g-dev libssl-dev libzstd-dev

      - name: Build static spale
        run: |
          export BPFTOOL="/usr/lib/linux-tools*/bpftool"
          make STATIC=1 all

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image metadata
        id: meta
        run: |
          REPO_SLUG="${{ github.repository }}"
          REPO_SLUG_LC="${REPO_SLUG,,}"
          IMAGE_ID="ghcr.io/${REPO_SLUG_LC}-bpfman"
          echo "image_id=${IMAGE_ID}" >> $GITHUB_OUTPUT
          TAGS="${IMAGE_ID}:sha-${GITHUB_SHA}"
          if [[ "${{ startsWith(github.ref, 'refs/tags/') }}" == "true" ]]; then
            TAGS+=$'\n'"${IMAGE_ID}:${GITHUB_REF_NAME}"
            TAGS+=$'\n'"${IMAGE_ID}:latest"
          fi
          echo "tags<<TAGS" >> $GITHUB_OUTPUT
          echo "$TAGS" >> $GITHUB_OUTPUT
          echo "TAGS" >> $GITHUB_OUTPUT

      - name: Build and push bpfman image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: dist/bpfman/Containerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Inspect binary
        run: |
          file build/spale || true
          ldd build/spale || true
          ls -l build/spale

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: spale-linux-amd64-static
          path: |
            build/spale
            bpf/external-xdp.o
          if-no-files-found: error

      - name: Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/spale
            bpf/external-xdp.o

